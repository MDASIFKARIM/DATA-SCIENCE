mydata<-read.csv("C:/r/iris.csv",header =  TRUE,sep= ",")
mydata


#selection data

subset(mydata, variety == "Virginica")




subset(mydata, petal.length >= 6)





#install.packages("dplyr") install this pakage for data manipulation data


library (dplyr)#check pakege insall


library(dplyr)
stats <- data.frame(player = c('A', 'B', 'c', 'D'), 
                    runs = c(100, 200, 408, 19), 
                    wickets = c(17, 20, NA, 5))


filtered_stats <- filter(stats, runs > 100)

print(filtered_stats)


#distinct method use duplicate row or colums delete 

library(dplyr)
stats <- data.frame(player = c('A', 'B', 'c', 'D','A','A'), 
                    runs = c(100, 200, 408, 19,56,100), 
                    wickets = c(17, 20, NA, 5,2,17))


distinct(stats)               #remove duplicate row


distinct(stats,player,keep_all = TRUE)  #remove duplicate colum


#arrange method use to sort

arrange(stats,runs) #sort the runs data

arrange(stats,player)


#select method one attribute can select 

select(stats,player,wickets)



#rename method use change colum name


#mutate (can not delete old variable-------------- and transmute can delete old vairiable 

mutate(stats,avg=runs/4)

transmute(stats,avg=runs/4)


#summarize method use summarize data fram calculate data which i need

summarise(stats,sum(runs),mean(runs))


mydata<-read.csv("C:/r/iris.csv",header =  TRUE,sep= ",")
mydata


#Min-Max normalization(sepal.length, sepal.width, petal.length, petal.width ) it use same range(0,1) data

normalize <- function(x) {return((x - min(x)) / (max(x) - min(x)))}

mydata_normalized <- mydata
mydata_normalized[, 1:4] <- apply(mydata[, 1:4], 2, normalize)
print(mydata_normalized)
                                                                                                       



